{{- include "prechecks" . -}}
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      rbac.authorization.kubeflow.org/aggregate-to-kubeflow-istio-admin: "true"
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.kubeflow.org/aggregate-to-kubeflow-admin: "true"
  name: kubeflow-istio-admin
rules: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.kubeflow.org/aggregate-to-kubeflow-edit: "true"
    rbac.authorization.kubeflow.org/aggregate-to-kubeflow-istio-admin: "true"
  name: kubeflow-istio-edit
rules:
- apiGroups:
  - istio.io
  - networking.istio.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - deletecollection
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.kubeflow.org/aggregate-to-kubeflow-view: "true"
  name: kubeflow-istio-view
rules:
- apiGroups:
  - istio.io
  - networking.istio.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
{{ if .Values.tlsCrt }}
apiVersion: v1
data:
  tls.crt: {{ .Values.tlsCrt }}
  tls.key: {{ .Values.tlsKey }}
kind: Secret
metadata:
  name: cpaas-https-certs
  namespace: istio-system
type: kubernetes.io/tls
{{ end }}
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: kubeflow-gateway
  namespace: kubeflow
spec:
  selector:
    istio: ingressgateway
  servers:
  - hosts:
    - '{{ .Values.kubeflowHost }}'
    port:
      name: http
      number: 80
      protocol: HTTP
# Enable HTTPS when ingress is *NOT* enabled and tlsCrt is set
{{ if not .Values.enableIngress }}
{{ if .Values.tlsCrt }}
    tls:
      httpsRedirect: true
  - hosts:
    - '{{ .Values.kubeflowHost }}'
    port:
      name: https
      number: 443
      protocol: HTTPS
    tls:
      credentialName: cpaas-https-certs
      mode: SIMPLE
{{ end }}
{{ end }}